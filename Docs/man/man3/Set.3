.TH "Set< KeyType, Hash, Equals >" 3 "Fri Oct 15 2021" "Symbol Table" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Set< KeyType, Hash, Equals > \- Hashtable with coalesced chaining  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Set\&.hpp>\fP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBIterator\fP"
.br
.RI "Const iterator for a \fBSet\fP\&. May become invalid/give errors after inserting data into the set; to check if an insertion would render the iterators invalid, use \fBwillInvalidateIteratorsOnInsert()\fP "
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef \fBIterator\fP \fBconst_iterator_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSet\fP ()"
.br
.RI "Initializes an empty \fBSet\fP with initial capacity 1 "
.ti -1c
.RI "\fBSet\fP (size_t initial_size)"
.br
.RI "Initializes an empty \fBSet\fP with a custom initial capacity "
.ti -1c
.RI "\fB~Set\fP ()"
.br
.ti -1c
.RI "std::pair< \fBIterator\fP, bool > \fBinsert\fP (const KeyType &item)"
.br
.RI "Inserts a copy of an item into the set "
.ti -1c
.RI "std::pair< \fBIterator\fP, bool > \fBinsert\fP (KeyType &&item)"
.br
.RI "Inserts an item into the set "
.ti -1c
.RI "\fBIterator\fP \fBfind\fP (const KeyType &item) const"
.br
.RI "Searches for an item in the set "
.ti -1c
.RI "void \fBerase\fP (\fBIterator\fP iterator)"
.br
.RI "Removes the item at an iterator "
.ti -1c
.RI "size_t \fBsize\fP ()"
.br
.RI "
.PP
\fBReturns\fP
.RS 4
The number of items in the set
.RE
.PP
"
.ti -1c
.RI "size_t \fBcapacity\fP ()"
.br
.ti -1c
.RI "bool \fBwillInvalidateIteratorsOnInsert\fP () const"
.br
.RI "
.PP
\fBReturns\fP
.RS 4
true if the next insert would trigger a resize, therefore invalidating the iterators
.RE
.PP
"
.ti -1c
.RI "\fBIterator\fP \fBbegin\fP () const"
.br
.ti -1c
.RI "\fBIterator\fP \fBend\fP () const"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class KeyType, class Hash = std::hash<KeyType>, class Equals = std::equal_to<KeyType>>
.br
class Set< KeyType, Hash, Equals >"
Hashtable with coalesced chaining 


.PP
\fBTemplate Parameters\fP
.RS 4
\fIKeyType\fP The type of the items held in this set
.br
\fIHash\fP Hashing functor for an item of type KeyType
.br
\fIEquals\fP Equality functor for an item of type KeyType
.RE
.PP

.PP
Definition at line 16 of file Set\&.hpp\&.
.SH "Member Typedef Documentation"
.PP 
.SS "template<class KeyType, class Hash = std::hash<KeyType>, class Equals = std::equal_to<KeyType>> typedef \fBIterator\fP \fBSet\fP< KeyType, Hash, Equals >::\fBconst_iterator_type\fP"

.PP
Definition at line 90 of file Set\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class KeyType, class Hash = std::hash<KeyType>, class Equals = std::equal_to<KeyType>> \fBSet\fP< KeyType, Hash, Equals >::\fBSet\fP ()\fC [inline]\fP"

.PP
Initializes an empty \fBSet\fP with initial capacity 1 
.PP
Definition at line 47 of file Set\&.hpp\&.
.SS "template<class KeyType , class Hash , class Equals > \fBSet\fP< KeyType, Hash, Equals >::\fBSet\fP (size_t initial_size)\fC [inline]\fP"

.PP
Initializes an empty \fBSet\fP with a custom initial capacity 
.PP
\fBParameters\fP
.RS 4
\fIinitial_size\fP The initial capacity 
.RE
.PP

.PP
Definition at line 138 of file Set\&.hpp\&.
.SS "template<class KeyType, class Hash = std::hash<KeyType>, class Equals = std::equal_to<KeyType>> \fBSet\fP< KeyType, Hash, Equals >::~\fBSet\fP ()\fC [inline]\fP"

.PP
Definition at line 53 of file Set\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "template<class KeyType , class Hash , class Equals > \fBSet\fP< KeyType, Hash, Equals >::\fBIterator\fP \fBSet\fP< KeyType, Hash, Equals >::begin () const\fC [inline]\fP"

.PP
Definition at line 287 of file Set\&.hpp\&.
.SS "template<class KeyType, class Hash = std::hash<KeyType>, class Equals = std::equal_to<KeyType>> size_t \fBSet\fP< KeyType, Hash, Equals >::capacity ()\fC [inline]\fP"

.PP
\fBReturns\fP
.RS 4
The capacity of the set
.RE
.PP
.PP
The number of insertions (without subtracting deletions) is compared with the capacity when resizing
.PP
Definition at line 122 of file Set\&.hpp\&.
.SS "template<class KeyType , class Hash , class Equals > \fBSet\fP< KeyType, Hash, Equals >::\fBIterator\fP \fBSet\fP< KeyType, Hash, Equals >::end () const\fC [inline]\fP"

.PP
Definition at line 295 of file Set\&.hpp\&.
.SS "template<class KeyType , class Hash , class Equals > void \fBSet\fP< KeyType, Hash, Equals >::erase (\fBIterator\fP iterator)\fC [inline]\fP"

.PP
Removes the item at an iterator 
.PP
\fBParameters\fP
.RS 4
\fIiterator\fP The position of the item to remove
.RE
.PP

.PP
Definition at line 271 of file Set\&.hpp\&.
.SS "template<class KeyType, class Hash , class Equals > \fBSet\fP< KeyType, Hash, Equals >::\fBIterator\fP \fBSet\fP< KeyType, Hash, Equals >::find (const KeyType & item) const\fC [inline]\fP"

.PP
Searches for an item in the set 
.PP
\fBParameters\fP
.RS 4
\fIitem\fP The item to search for
.RE
.PP
\fBReturns\fP
.RS 4
An iterator to the similar item in the set or \fBend()\fP
.RE
.PP

.PP
Definition at line 257 of file Set\&.hpp\&.
.SS "template<class KeyType, class Hash , class Equals > std::pair< typename \fBSet\fP< KeyType, Hash, Equals >::\fBIterator\fP, bool > \fBSet\fP< KeyType, Hash, Equals >::insert (const KeyType & item)"

.PP
Inserts a copy of an item into the set 
.PP
\fBParameters\fP
.RS 4
\fIitem\fP The item to insert 
.RE
.PP
\fBReturns\fP
.RS 4
An iterator to an item equal to the parameter and whether the insertion happened (true) or a similar item was already in the set (false) 
.RE
.PP

.PP
Definition at line 251 of file Set\&.hpp\&.
.SS "template<class KeyType, class Hash , class Equals > std::pair< typename \fBSet\fP< KeyType, Hash, Equals >::\fBIterator\fP, bool > \fBSet\fP< KeyType, Hash, Equals >::insert (KeyType && item)"

.PP
Inserts an item into the set 
.PP
\fBParameters\fP
.RS 4
\fIitem\fP The item to insert 
.RE
.PP
\fBReturns\fP
.RS 4
An iterator to an item equal to the parameter and whether the insertion happened (true) or a similar item was already in the set (false) 
.RE
.PP

.PP
Definition at line 245 of file Set\&.hpp\&.
.SS "template<class KeyType, class Hash = std::hash<KeyType>, class Equals = std::equal_to<KeyType>> size_t \fBSet\fP< KeyType, Hash, Equals >::size ()\fC [inline]\fP"

.PP

.PP
\fBReturns\fP
.RS 4
The number of items in the set
.RE
.PP

.PP
Definition at line 118 of file Set\&.hpp\&.
.SS "template<class KeyType , class Hash , class Equals > bool \fBSet\fP< KeyType, Hash, Equals >::willInvalidateIteratorsOnInsert () const\fC [inline]\fP"

.PP

.PP
\fBReturns\fP
.RS 4
true if the next insert would trigger a resize, therefore invalidating the iterators
.RE
.PP

.PP
Definition at line 281 of file Set\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Symbol Table from the source code\&.
